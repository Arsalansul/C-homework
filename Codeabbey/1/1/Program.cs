using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _1
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
            //sum of two
            Console.WriteLine(3714 + 13171);

            //sum in loop
            int n = 31;
            string stroka = "167 579 77 943 61 352 964 479 653 262 257 432 1072 1134 230 709 1158 528 538 338 628 336 1030 500 880 863 1216 940 777 717 1056";
            string[] stroki = stroka.Split(' ');
            int sum = 0;
            for (int i = 0; i < n; i++)
            {
                int chislo = Convert.ToInt32(stroki[i]);
                sum += chislo;
            }
            Console.WriteLine(sum);

            //sums in loop
            n = 14;
            int[,] stroka1 = { { 863866, 976037 },
                              { 850880, 691524 },
                              { 521287, 439173 },
                              { 695876, 679440 },
                              { 345189, 246079 },
                              { 323846, 237919 },
                              { 908885, 633703 },
                              { 974923, 824847 },
                              { 234609, 810369 },
                              { 822929, 61116 } ,
                              { 351001, 879093 },
                              { 462651, 89030 } ,
                              { 283758, 293418 },
                              { 943106, 801500 }};
            for (int i = 0; i < n; i++)
            {
                Console.Write(stroka1[i, 0] + stroka1[i, 1] + " ");
            }

            //min of two
            n = 25;
            int[,] array ={{-6436518,  -5245576},
                          {6186815 , 1620233  },
                          {-3268125,  -4760265},
                          {8667738 , -5524605 },
                          {-9277583,  -3316549},
                          {-9303082,  9852392 },
                          {-6181478,  -3466564},
                          {5035864 , 2260590  },
                          {7993889 , 7215408  },
                          {9224542 , 1939873  },
                          {1080695 , 8726401  },
                          {6981692 , 4221663  },
                          {-1139590,  -1591501},
                          {2498581 , 7985273  },
                          {3913989 , -4733204 },
                          {-2207920,  7477471 },
                          {21220, -6021105    },
                          {-902295 ,6753094   },
                          {-781371 ,-2234557  },
                          {-8771510, -58954   },
                          {4448894 ,-8074593  },
                          {-206562 ,8267416   },
                          {-1541157, -5170697 },
                          {528006, -3547268   },
                          {-7955289, -247451   }};

            for (int i = 0; i < n; i++) 
            {
                Console.Write(Math.Min(array[i, 0], array[i, 1]) + " ");
            }

            //min of tree
            n = 28;


            int[,] array1 ={{-798806 ,-4537252 ,-7768613 },
                            {9636070 ,8631556  ,-5180298 },
                            {8657072 ,-3498606 ,8791330  },
                            {-292635 ,4693291  ,2964502  },
                            {-2916868, 6726157 ,8777586  },
                            {-8379897, 3242655 ,-3079225 },
                            {4339917 ,9913464  ,-7730226 },
                            {8267176 ,4479750  , 8073739 },
                            {-5781519, -8064204, -2773538},
                            {6448850 ,5750194  , -7179442},
                            {1297242 ,-5048612 , -1716695},
                            {3528629 ,-5412541 ,-3085138 },
                            {8348330 ,-6755469 ,3416256  },
                            {7139661 ,2951896 ,-1890453  },
                            {104164 ,-9964971 ,-5164295  },
                            {-1118250, -8344869, 8078359 },
                            {5802524 ,5995048 ,7991823   },
                            {8072298 ,4262224 ,2471574   },
                            {6146038 ,8480705 ,4407369   },
                            {-6627499, 4929555, 157564   },
                            {-3806942, -3773202, 5108951 },
                            {4476362 ,9755427 ,9696410   },
                            {-8608775, 8103757, -7059059 },
                            {4807480 ,5243419 ,5892837   },
                            {-7082973, -4652417, 5927865 },
                            {-2247269, 4229332 ,7582995  },
                            {-4168909, 31857 ,3578043    },
                            {-6177086, -1895845, -2159732}};

            for (int i = 0; i < n; i++)
            {
                Console.Write(Math.Min(array1[i, 0], Math.Min(array1[i, 1],array1[i,2])) + " ");
            }
            
            //max of array
            string FindMaxString = "38316 17850 66067 -28266 -43483 75113 -17979 -33036 49994 -54112 66443 48572 -27140 -56480 79625 -42227 -9239 59817 -29412 -22205 -58271 56007 -59327 72855 41079 70223 -2704 32393 73838 -54813 16167 32154 43037 2234 -76111 79554 -2652 -14090 -33481 -32657 11797 -47038 -64085 64656 -23518 -64459 -57570 47242 75358 -6982 -54963 -62913 -30975 -34290 -70057 -69895 -44066 7239 42498 -50227 32426 -21335 61927 -4536 60898 65815 -4982 -21754 -28275 41536 25588 63522 74498 41503 48179 -29020 57043 70608 -61777 52401 -16373 -36740 69488 32651 8970 79431 42755 44903 6671 5253 74675 -40902 63917 56602 34561 44816 42417 -50421 -56937 -65857 71115 48650 77664 65613 10154 45843 -43406 -12803 36452 -25183 -40401 -59920 18076 -50912 52730 -52954 -51481 15486 71948 35190 -59261 66624 74287 -75343 43227 28848 49473 5645 58427 72535 19787 49542 41186 17452 35156 -28660 -16704 71749 38536 -60251 -33434 78135 -40172 64642 -52777 -67442 -68312 -24258 28044 -76363 -69068 48783 70261 -74781 53439 33488 34067 22913 -40867 12494 15448 58920 -17964 -23366 -3627 -62807 27973 59668 -71058 -13490 79417 -24492 -15355 -40755 -39850 11868 -28197 -28162 67609 79846 -24525 78540 48629 -34264 -76240 22069 79224 37826 -35018 -41642 -29680 60430 -62722 32356 -42935 13650 49548 65037 -6681 58490 -28452 -7264 -46001 36193 31981 -5851 -31939 -76216 45986 -44330 -76369 -58538 -45789 52259 -12803 -42030 -5671 -13579 75795 39311 24778 -33884 19742 42056 78472 56806 -24293 48021 41844 49025 26511 -66608 -38238 60510 49584 73742 -25341 -62355 77526 -59354 -26685 -78843 -37893 7525 53416 29304 45494 -32254 -64274 41290 -72943 40504 -72594 26798 2560 -74122 3605 58267 53898 -34551 27292 410 -21160 69054 -19079 -51575 62797 35579 -33930 60323 56225 19384 61480 -61667 -53090 34896 47636 72403 -77358 63362 33694 -70301 23866 41099 36497 -53574 46977 -39898 -75307 20876 5550 31985 -58713 64390 21040 2207 -67184 3837 -42213 -21115";
            string[] FindMaxStrings = FindMaxString.Split(' ');
            int FindMax=Convert.ToInt32(FindMaxStrings[0]);
            int FindMin=Convert.ToInt32(FindMaxStrings[0]);
            for (int i = 1; i < FindMaxStrings.Length; i++)
            {
                FindMax = Math.Max(FindMax, Convert.ToInt32(FindMaxStrings[i]));
                FindMin = Math.Min(FindMin, Convert.ToInt32(FindMaxStrings[i]));
            }
            Console.WriteLine(FindMax + " " + FindMin);
*/
            //Rounding
            int n = 15;
            double[,] array=  {{6735765 ,41119    },
                            {-4454936, -1258099},
                            {1942681 ,432      },
                            {5831 ,1220        },
                            {-106216, 1064441  },
                            {8997 ,1868        },
                            {18335 ,930        },
                            {8678841, 80       },
                            {15431 ,420        },
                            {6893666, -939334  },
                            {3330873 ,243      },
                            {4995067 ,201080   },
                            {16657 ,1400       },
                            {1088450, 2392326  },
                            {5057, 774}};
            for (int i = 0; i < n; i++)
            {
                Console.Write(Math.Round(array[i, 0] / array[i, 1]) + " ");
            }
            Console.ReadKey();
        }
    }
}
